#+TITLE: Emacs Configuration File
#+PROPERTY: header-args :tangle ~/.emacs

* To Run
To run this file, do C-c C-v t which will tangle all the elisp code and place it into ~/.emacs. Then re-open emacs to see the changes.

* Packages
#+begin_src elisp
  (require 'package)
  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)


  (unless (package-installed-p 'vertico)
    (package-refresh-contents)
    (package-install 'vertico))

  (unless (package-installed-p `neotree)
    (package-refresh-contents))

  (require 'neotree)
  (global-set-key (kbd "C-c n") 'neotree-toggle)
  (setq neo-window-fixed-size nil)
#+end_src

** Magit
Magit is an emacs git client.
*** Setup
#+begin_src elisp
  (unless (package-installed-p 'magit)
    (package-refresh-contents)
    (package-install 'magit))
#+end_src

*** Usage
C-x g opens up the status page. From there you can stage (s) or unstage (u) files.
c to commit, but you need to do C-c C-c to save the commit message.
P to push.
q to quit.

** lsp-mode
#+begin_src elisp
  (unless (package-installed-p 'lsp-mode)
    (package-refresh-contents)
    (package-install 'lsp-mode))
  (require 'lsp-mode)

  (unless (package-installed-p 'company)
    (package-refresh-contents)
    (package-install 'company))
  (require 'company)

  (setq company-minimum-prefix-length 1

        company-idle-delay 0.0) ; Show completions immediately
#+end_src

** web-mode
#+begin_src elisp
  (unless (package-installed-p 'web-mode)
    (package-refresh-contents)
    (package-install 'web-mode))
  (require 'web-mode)
  (add-to-list 'auto-mode-alist '("\\.ts\\'". web-mode))
  (add-to-list 'auto-mode-alist '("\\.tsx\\'". web-mode))
  (add-to-list 'auto-mode-alist '("\\.html\\'". web-mode))
  (add-to-list 'auto-mode-alist '("\\.css\\'". web-mode))

  (add-hook 'web-mode-hook #'lsp-deferred)
  (setq web-mode-markup-indent-offset 2) ; For HTML
  (setq web-mode-css-indent-offset 2)    ; For CSS
  (setq web-mode-code-indent-offset 2)   ; For JavaScript, PHP, etc.
#+end_src

** prettier-emacs
#+begin_src elisp
  (unless (package-installed-p 'prettier-js)
    (package-refresh-contents)
    (package-install 'prettier-js))
  (require 'prettier-js)
  (add-hook 'web-mode-hook 'prettier-js-mode)
#+end_src

* Visual
#+begin_src elisp
  (load-theme 'tango-dark)
  (global-visual-line-mode t)
  (global-display-line-numbers-mode t)
  (add-hook 'org-indent-hook #'org-indent-mode)
#+end_src

* Search
#+begin_src elisp
  (setq completion-styles '(flex))
  (vertico-mode 1)
#+end_src

* Keybindings
#+begin_src elisp
    (global-set-key (kbd "C-c f") 'find-name-dired)
    (global-set-key (kbd "C-c d") 'flymake-show-buffer-diagnostics)
    (global-set-key (kbd "C-c e") (lambda () (interactive) (find-file "~/emacs-config/config.org"))) 
    (defun forward-to-word-beginning ()
      "Move point to the beginning of the next word."
      (interactive)
      (forward-word)
      (forward-char))
    (global-set-key (kbd "M-f") 'forward-to-word-beginning)
  #+end_src

* Evil mode
#+begin_src elisp
  (unless (package-installed-p 'evil)
    (package-refresh-contents)
    (package-install 'evil))

  (unless (package-installed-p 'evil-collection)
    (package-refresh-contents)
    (package-install 'evil-collection))

  (setq evil-want-keybinding nil)
  (require 'evil)
  (require 'evil-collection)

  (evil-mode 1)
  (evil-collection-init)
#+end_src

* General config
Turn off C-z because it hangs emacs
#+begin_src elisp
  (global-unset-key (kbd "C-z"))
#+end_src
